# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build the Docker image
      working-directory: ./src/app
      run: docker build . --file Dockerfile --tag wm_task:0.1
    - name: Run Docker
      working-directory: ./src/app
      run: |
        docker run -p 8080:8080 -d wm_task:0.1
    - name: Install Pytest
      working-directory: ./src/test
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests
    - name: Test with Pytest
      working-directory: ./src/test
      run: |
        python -m pytest app_test.py

  terraform:
    needs: build_test
    name: 'Deploy using Terraform on AWS_lambda'
    runs-on: ubuntu-latest
    env: # Or as an environment variable
      AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name : Setting up Terraform
      uses: hashicorp/setup-terraform@v1
    - name : Setting up python
      uses: actions/setup-python@v2
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    - name: Terraform Init
      working-directory: ./terraform
      id: init
      run: terraform init

    - name: Terraform Validate
      working-directory: ./terraform
      id: validate
      run: terraform validate

    - name: Terraform Plan
      working-directory: ./terraform
      id: plan
      run: terraform plan -out wm_tf.plan
      continue-on-error: true
    - name: Terraform apply
      working-directory: ./terraform
      id: apply
      run: terraform apply -auto-approve
      continue-on-error: false
    - name : Push back terraform.tfstate file
      uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
      with:
        add: './terraform/terraform.tfstate'
        author_name: github_actions
        author_email: mail@example.com
        branch: main
        committer_name: Committer Name
        committer_email: mail@example.com
        cwd: '/'
        default_author: github_actor
        message: 'updating terraform.tfstate file'
        pathspec_error_handling: ignore
        pull: '--no-rebase'
        push: true
        remove: ''
        signoff: true
        tag: 'v1.0.0 --force'
